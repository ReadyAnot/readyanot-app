---
- hosts: localhost
  gather_facts: false
  vars:
    app_name: readyanot-app
    aws_ecr_url: 363599773651.dkr.ecr.ap-southeast-1.amazonaws.com
    home_dir: ..

  tasks:
    - name: fetch credentials into dot env files
      shell: |
        ReadyAnotPg=$(aws secretsmanager get-secret-value --secret-id $"prod/ReadyAnot/PostgreSQL" | jq -r ".SecretString")
        username=$(jq ".username" <<< $ReadyAnotPg | tr -d \")
        password=$(jq ".password" <<< $ReadyAnotPg | tr -d \")
        host=$(jq ".host" <<< $ReadyAnotPg | tr -d \")
        port=$(jq ".port" <<< $ReadyAnotPg | tr -d \")
        rm -rf { home_dir }}/.env.development.local
        rm -rf { home_dir }}/.env.production.local
        echo DATABASE_URL=\"postgresql://$username:$password@$host:$port/readyanot-dev?schema=public\" >> {{ home_dir }}/.env.development.local
        echo DATABASE_URL=\"postgresql://$username:$password@$host:$port/readyanot-prod?schema=public\" >> {{ home_dir }}/.env.production.local

    - name: set environment facts
      set_fact:
        is_ci: "{{ lookup('env', 'CI') | default(false, True) }}"

    - name: install dependencies
      shell: npm ci

    - name: update database schemas
      shell: |
        cd {{ home_dir }}
        dotenv -e .env.development.local -- prisma db push --preview-feature
        dotenv -e .env.production.local -- prisma db push --preview-feature

    - name: test build application
      shell: npm run build

    - name: build and tag docker image
      shell: |
        docker build -t {{ app_name }} .
        docker tag {{ app_name }} {{ aws_ecr_url }}/{{ app_name }}

    - name: push docker image to ecr
      shell: |
        docker login -u AWS -p $(aws ecr get-login-password --region ap-southeast-1) {{ aws_ecr_url }}
        docker push {{ aws_ecr_url }}/{{ app_name }}

    - name: deploy to elastic beanstalk
      shell: eb deploy
